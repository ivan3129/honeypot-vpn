version: '3.7'

services:

  setup:
    build:
      context: elk/setup/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
        TZ: ${TZ}
    init: true
    volumes:
      - setupscriptsdata:/state:Z
    environment:
      TZ: ${TZ}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - elasticnet
    depends_on:
      - elasticsearch

  elasticsearch:
    build:
      context: elk/elasticsearch/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
        TZ: ${TZ}
    volumes:
      - ./elk/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearchdata:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      TZ: ${TZ}
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
      discovery.type: single-node
    networks:
      - elasticnet

  logstash:
    build:
      context: elk/logstash/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
        TZ: ${TZ}
    volumes:
      - ./elk/logstash/ip2locationdatabases:/usr/share/logstash/ip2locationdatabases:ro,Z
      - ./elk/logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro,Z
      - ./elk/logstash/pipeline:/usr/share/logstash/pipeline:ro,Z
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "6000:6000/udp"
      - "9600:9600"
    environment:
      TZ: ${TZ}
      LS_JAVA_OPTS: -Xms512m -Xmx512m
      LOGSTASH_INTERNAL_PASSWORD: ${LOGSTASH_INTERNAL_PASSWORD:-}
    networks:
      - elasticnet
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: elk/kibana/
      args:
        ELASTIC_VERSION: ${ELASTIC_VERSION}
        TZ: ${TZ}
    volumes:
      - ./elk/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
    ports:
      - "5601:5601"
    environment:
      TZ: ${TZ}
      KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
    networks:
      - elasticnet
    depends_on:
      - elasticsearch

  honeypotvpn:
    build:
      context: honeypotvpn_docker_standalone/
      args:
        TZ: ${TZ}
    volumes:
      - honeypotvpndata:/honeypotvpn:z
    ports:
      - "500:500/udp"
      - "4500:4500/udp"
    environment:
      TZ: ${TZ}
      VPN_PASSWORD: ${VPN_PASSWORD:-ivan}
    command: bash -c "honeypot-vpn -p ${VPN_PASSWORD}"
    networks:
      - elasticnet
    depends_on:
      - logstash

networks:
  elasticnet:
    driver: bridge

volumes:
  setupscriptsdata:
    driver: local
  elasticsearchdata:
    driver: local
  honeypotvpndata:
    driver: local

